# import streamlit as st
# from streamlit_option_menu import option_menu

# import streamlit as st
# from streamlit_option_menu import option_menu

# # Estilos personalizados com CSS
# st.markdown("""
#     <style>
#     /* Cor de fundo do menu */
#     .css-1d391kg {
#         background-color: #F0F4F8; /* azul claro */
#     }

#     /* Cor ativa (selecionada) do item */
#     .nav-link.active {
#         background-color: #0066cc !important;
#         color: white !important;
#     }

#     /* Cor do texto e √≠cones */
#     .nav-link {
#         color: #333 !important;
#     }

#     /* Hover */
#     .nav-link:hover {
#         background-color: #d6eaff !important;
#         color: #000 !important;
#     }
#     </style>
# """, unsafe_allow_html=True)

# # Menu com option_menu (estrutura normal)
# with st.sidebar:
#     selected = option_menu(
#         menu_title="Menu",
#         options=["Home", "Sobre", "Contato"],
#         icons=["house", "info-circle", "envelope"],
#         menu_icon="cast",        
#         orientation="horizontal"
#     )

# # Exibi√ß√£o simples
# st.write(f"Voc√™ selecionou: {selected}")


# # Se√ß√µes com conte√∫do
# if selected == "Introdu√ß√£o":
#     st.header("üìò Introdu√ß√£o")
#     st.write("Conte√∫do da introdu√ß√£o aqui...")

# elif selected == "Pesquisa":
#     st.header("üìä Pesquisa")

#     # Submenu com abas horizontais
#     tab1, tab2, tab3 = st.tabs(["Gr√°ficos", "Tabelas", "An√°lises"])

#     with tab1:
#         st.subheader("üìà Gr√°ficos")
#         st.write("Visualiza√ß√µes interativas com matplotlib, seaborn ou plotly.")

#     with tab2:
#         st.subheader("üìã Tabelas")
#         st.write("Visualiza√ß√£o de dados em formato de tabela.")

#     with tab3:
#         st.subheader("üß† An√°lises")
#         st.write("Texto anal√≠tico com interpreta√ß√µes e conclus√µes.")

# elif selected == "Panfleto":
#     st.header("üìÑ Panfleto")
#     st.write("Conte√∫do do panfleto...")

# elif selected == "Proposta de Atividade Pr√°tica":
#     st.header("üìù Proposta de Atividade Pr√°tica")
#     st.write("Descri√ß√£o da proposta pr√°tica...")

# elif selected == "Pontos de Coleta":
#     st.header("üìç Pontos de Coleta")
#     st.write("Locais onde a coleta de materiais pode ser feita.")


import streamlit as st
import plotly.express as px
import time
from streamlit_option_menu import option_menu

with st.sidebar:
    selected = option_menu(
        menu_title="ATEX VIII - Home",  # T√≠tulo opcional
        options=[
            "Introdu√ß√£o",
            "Pesquisa e Gr√°ficos",
            "Panfleto Educativo",
            "Proposta de Atividade Pr√°tica",
            "Pontos de coleta"
        ],
        icons=["book", "bar-chart", "file-earmark-text", "clipboard-check", "geo-alt"],
        menu_icon="house",  # √çcone do menu (acima)
        styles={
    "container": {"padding": "5px", "background-color": "#07070700"},
    "nav-link": {"color": "#333"},
    "nav-link-selected": {"background-color": "#092c60", "color": "white"},
}

        
        
    )



if selected == "Proposta de Atividade Pr√°tica":
    st.header("üìù Proposta de Atividade Pr√°tica Interativa")

    # Objetivo e introdu√ß√£o
    with st.expander("üéØ Objetivo da Atividade"):
        st.markdown("""
        Promover a conscientiza√ß√£o dos moradores sobre os impactos ambientais do descarte inadequado de lixo eletr√¥nico
        e incentivar pr√°ticas corretas por meio de panfletos e pontos de coleta no condom√≠nio.
        """)

    # Barra de progresso de campanha
    st.subheader("üìà Progresso da Campanha")
    progresso = st.progress(0)
    for pct in range(0, 101, 10):
        time.sleep(0.05)
        progresso.progress(pct)
    st.success("Campanha finalizada com sucesso!")

    # Gr√°fico de itens coletados
    st.subheader("üìä Itens Recolhidos")
    dados = {
        "Item": [
            "Placa m√£e", "SSD", "Mem√≥ria RAM",
            "Pilhas", "HD de notebook", "HD externo",
            "Celulares"
        ],
        "Quantidade": [1, 1, 1, 2, 1, 1, 3]
    }

    fig = px.pie(
        names=dados["Item"],
        values=dados["Quantidade"],
        title="Distribui√ß√£o dos Itens Coletados",
        color_discrete_sequence=px.colors.sequential.RdBu
    )
    st.plotly_chart(fig, use_container_width=True)

    # Resultado com imagem
    st.subheader("üì¶ Registro Visual")
    st.image("https://raw.githubusercontent.com/SantanaDZ/images-projects/refs/heads/main/atex8_imgs/ITENS_RECOLHIDOS.jpeg", width=500)

    st.markdown("""
    ‚úÖ Todos os itens foram coletados e descartados corretamente.  
    A campanha foi um sucesso dentro do condom√≠nio!
    """)
